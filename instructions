# **Step-by-Step Implementation Guide - Baby Steps**

I'll guide you through EVERYTHING, assuming nothing.

---

## **Step 1: Check Your Current Setup**

### **1.1: Open Your Project in Cursor**

1. Open Cursor
2. Click **File → Open Folder**
3. Navigate to your project folder (the one with your existing code)
4. Click "Select Folder"

**Your folder should look like:**
```
your_project/
├── venv/           (your virtual environment from yesterday)
├── some_file.py    (your existing code)
```

---

### **1.2: Open Terminal in Cursor**

1. In Cursor, press **Ctrl + `** (backtick key, usually above Tab)
   - Or go to: **Terminal → New Terminal**

You should see a terminal at the bottom of Cursor.

---

## **Step 2: Activate Your Virtual Environment**

### **2.1: Check if venv exists**

In the terminal, type:

**On Windows:**
```bash
dir venv
```

**On Mac/Linux:**
```bash
ls venv
```

**What you should see:** List of folders (Scripts, Lib, etc.)

**If you DON'T see venv folder:**
- You need to create it (skip to Step 2.3)

---

### **2.2: Activate venv**

**On Windows:**
```bash
venv\Scripts\activate
```

**On Mac/Linux:**
```bash
source venv/bin/activate
```

**How to know it worked:**
You'll see `(venv)` at the start of your terminal line:
```bash
(venv) C:\Users\YourName\project>
```

---

### **2.3: If venv doesn't exist or activation failed, create new one**

**On Windows:**
```bash
python -m venv venv
```

**On Mac/Linux:**
```bash
python3 -m venv venv
```

Wait 10-20 seconds for it to complete.

Then activate it (go back to Step 2.2).

---

## **Step 3: Install Required Packages**

Now that venv is active (you see `(venv)` in terminal), install everything:

```bash
pip install fastapi uvicorn gradio groq pydantic requests python-multipart
```

**What this does:** Downloads and installs all libraries we need

**How long:** 1-2 minutes

**What you'll see:** Lots of text scrolling, ending with "Successfully installed..."

---

### **3.1: Verify Installation**

Check if everything installed correctly:

```bash
pip list
```

**You should see:**
```
fastapi       0.109.0
uvicorn       0.27.0
gradio        4.x.x
groq          0.x.x
pydantic      2.x.x
requests      2.x.x
...
```

(Version numbers don't need to match exactly)

---

## **Step 4: Get Your Groq API Key**

### **4.1: Go to Groq Website**

1. Open browser
2. Go to: https://console.groq.com
3. Log in (or create account if you don't have one)

### **4.2: Create API Key**

1. Click on **"API Keys"** in left sidebar
2. Click **"Create API Key"**
3. Give it a name: "Therapy Chatbot"
4. Click **"Create"**
5. **COPY THE KEY** (looks like: `gsk_xxxxxxxxxxxxxxxxxxxx`)

⚠️ **IMPORTANT:** Copy it NOW - you can't see it again!

---

### **4.3: Set API Key as Environment Variable**

**On Windows (CMD):**
```bash
set GROQ_API_KEY=gsk_your_actual_key_here
```

**On Windows (PowerShell):**
```bash
$env:GROQ_API_KEY="gsk_your_actual_key_here"
```

**On Mac/Linux:**
```bash
export GROQ_API_KEY="gsk_your_actual_key_here"
```

**Replace `gsk_your_actual_key_here` with your actual key!**

---

### **4.4: Verify API Key is Set**

**On Windows (CMD):**
```bash
echo %GROQ_API_KEY%
```

**On Windows (PowerShell):**
```bash
echo $env:GROQ_API_KEY
```

**On Mac/Linux:**
```bash
echo $GROQ_API_KEY
```

**You should see your API key printed.**

---

## **Step 5: Create Backend File**

### **5.1: Create New File in Cursor**

1. In Cursor, right-click on your project folder (left sidebar)
2. Click **"New File"**
3. Name it: `backend.py`
4. Press Enter

---

### **5.2: Copy Backend Code**

1. Go back to the **backend.py artifact** I created earlier
2. Click the **copy button** (top right of code block)
3. In Cursor, click inside the empty `backend.py` file
4. Press **Ctrl + V** (or Cmd + V on Mac) to paste
5. Press **Ctrl + S** (or Cmd + S) to save

**You should now have backend.py with all the code.**

---

## **Step 6: Create Frontend File**

### **6.1: Create New File**

1. Right-click on project folder again
2. Click **"New File"**
3. Name it: `frontend.py`
4. Press Enter

---

### **6.2: Copy Frontend Code**

1. Go to the **frontend.py artifact** I created
2. Click **copy button**
3. Click inside the empty `frontend.py` file
4. Press **Ctrl + V** to paste
5. Press **Ctrl + S** to save

---

## **Step 7: Your Project Structure Now**

Your folder should look like:
```
your_project/
├── venv/              (virtual environment)
├── backend.py         (NEW - FastAPI server)
├── frontend.py        (NEW - Gradio UI)
├── your_old_file.py   (your existing code - can ignore for now)
```

---

## **Step 8: Test Backend First**

### **8.1: Make Sure Terminal is Still Active**

Check terminal shows `(venv)` at the start of line.

**If not:** Go back to Step 2.2 and activate venv again.

---

### **8.2: Start Backend Server**

In terminal, type:

```bash
uvicorn backend:app --reload
```

Press Enter.

---

### **8.3: What You Should See**

```
INFO:     Will watch for changes in these directories: ['C:\\Users\\...']
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [12345] using StatReload
INFO:     Started server process [12346]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
```

**If you see this:** ✅ Backend is running!

**Keep this terminal open!** Don't close it.

---

### **8.4: Test Backend in Browser**

1. Open your web browser
2. Go to: `http://localhost:8000`

**You should see:**
```json
{
  "message": "AI Therapy Chatbot API is running!",
  "version": "1.0.0",
  "status": "healthy"
}
```

**If you see this:** ✅ Backend is working correctly!

---

### **8.5: Check Auto-Generated API Docs**

Go to: `http://localhost:8000/docs`

**You should see:** Swagger UI with all your endpoints listed:
- POST /chat
- POST /sessions/new
- GET /users/{user_id}/sessions
- GET /conversations/{session_id}

**This is cool!** FastAPI automatically creates this documentation.

---

## **Step 9: Start Frontend (New Terminal)**

### **9.1: Open SECOND Terminal**

**Don't close the first terminal (backend is running there)!**

In Cursor:
1. Click **Terminal → New Terminal** (or press **Ctrl + Shift + `**)

You should now have **2 terminals** at the bottom:
- Terminal 1: Backend running
- Terminal 2: New empty terminal

---

### **9.2: Activate venv in Second Terminal**

In the NEW terminal, activate venv again:

**On Windows:**
```bash
venv\Scripts\activate
```

**On Mac/Linux:**
```bash
source venv/bin/activate
```

**You should see `(venv)` appear.**

---

### **9.3: Start Frontend**

In the second terminal, type:

```bash
python frontend.py
```

Press Enter.

---

### **9.4: What You Should See**

```
==================================================
🚀 Starting AI Therapy Chatbot Frontend
==================================================

⚠️  IMPORTANT: Make sure FastAPI backend is running!
   Start backend with: uvicorn backend:app --reload

==================================================
Running on local URL:  http://127.0.0.1:7860

To create a public link, set `share=True` in `launch()`.
```

**If you see this:** ✅ Frontend is running!

---

## **Step 10: Open the App**

### **10.1: Open in Browser**

Go to: `http://localhost:7860`

---

### **10.2: You Should See Login Screen**

```
┌─────────────────────────────────────────┐
│  🧠 AI Therapy Client Simulator         │
│  Practice your therapy skills...        │
│                                          │
│  Your Name: [____________]              │
│             [Start Practicing]          │
└─────────────────────────────────────────┘
```

**If you see this:** 🎉 **SUCCESS! Everything is working!**

---

## **Step 11: Test the Complete System**

### **11.1: Login**

1. Type your name: "Test Student"
2. Click "Start Practicing"

**You should see:** Login screen disappears, chat screen appears

---

### **11.2: Chat with Pritam**

1. In the message box, type: "How are you feeling today?"
2. Press Enter (or click Send)

**You should see:** Pritam responds with something like "[Looks down] Not great..."

**If this works:** ✅ Backend ↔ Frontend ↔ Groq API all working!

---

### **11.3: Test "New Chat"**

1. Click "➕ New Chat" button in sidebar
2. Chat area clears
3. Sidebar now shows "Session-1" and "Session-2"

**Type new message** - starts fresh conversation

---

### **11.4: Test Loading Past Session**

1. Click on "Session-1" in the sidebar dropdown
2. Old conversation loads

**If you see the old messages:** ✅ Session management working!

---

## **Step 12: Troubleshooting Common Issues**

### **Issue 1: "Cannot connect to backend"**

**Problem:** Frontend can't reach backend

**Solution:**
1. Check Terminal 1 - is backend still running?
2. Go to `http://localhost:8000` - does it work?
3. If not, restart backend:
   - Press Ctrl+C in Terminal 1
   - Run: `uvicorn backend:app --reload`

---

### **Issue 2: "GROQ_API_KEY not found"**

**Problem:** API key not set

**Solution:**
1. Stop backend (Ctrl+C in Terminal 1)
2. Set API key again (Step 4.3)
3. Restart backend

---

### **Issue 3: "Module not found"**

**Problem:** Package not installed

**Solution:**
1. Check venv is active (see `(venv)` in terminal)
2. Run: `pip install [missing_package_name]`
3. Restart backend/frontend

---

### **Issue 4: Port Already in Use**

**Error:** `Address already in use`

**Solution:**
1. Close all terminals
2. Close Cursor
3. Reopen Cursor
4. Start again from Step 8

---

## **Step 13: How to Stop Everything**

### **When You're Done Testing:**

**Stop Frontend:**
1. Go to Terminal 2 (frontend)
2. Press **Ctrl + C**

**Stop Backend:**
1. Go to Terminal 1 (backend)
2. Press **Ctrl + C**

**Both terminals should return to normal prompt.**

---

## **Step 14: How to Restart Later**

**Next time you want to use the app:**

1. Open Cursor
2. Open your project folder
3. Open 2 terminals
4. **In Terminal 1:**
   ```bash
   venv\Scripts\activate        # Windows
   source venv/bin/activate     # Mac/Linux
   
   set GROQ_API_KEY=your_key    # Windows
   export GROQ_API_KEY=your_key # Mac/Linux
   
   uvicorn backend:app --reload
   ```

5. **In Terminal 2:**
   ```bash
   venv\Scripts\activate        # Windows
   source venv/bin/activate     # Mac/Linux
   
   python frontend.py
   ```

6. Open browser: `http://localhost:7860`

---

## **Quick Reference Card**

**Save this for future use:**

```
┌─────────────────────────────────────────────┐
│ STARTING THE APP                            │
├─────────────────────────────────────────────┤
│ Terminal 1:                                 │
│   1. venv\Scripts\activate                  │
│   2. set GROQ_API_KEY=...                   │
│   3. uvicorn backend:app --reload           │
│                                             │
│ Terminal 2:                                 │
│   1. venv\Scripts\activate                  │
│   2. python frontend.py                     │
│                                             │
│ Browser:                                    │
│   http://localhost:7860                     │
└─────────────────────────────────────────────┘
```

---

## **What to Do NOW**

**Start from Step 1** and follow each step carefully. 

**At each step:**
- ✅ If it works, move to next step
- ❌ If it doesn't work, let me know EXACTLY:
  - Which step you're on
  - What you typed
  - What error message you got
  - Screenshot if possible

**Don't skip steps!** Even if something seems obvious, do it anyway.

---

**Ready? Start with Step 1 and tell me when you've completed it!**
